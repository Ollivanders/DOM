<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>509</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run JavaScript.action</string>
				<key>ActionName</key>
				<string>Run JavaScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>//Set this to be folder where you save the files. Must create it 

var filePath = '~/Documents/windowPositions/';
var app = Application.currentApplication();
app.includeStandardAdditions = true;
//get list of files in special folder
var fileList = Application("System Events").folders.byName(filePath).diskItems.name();
if (fileList.length &gt; 0) {
	//choose file
	var whichFile = app.chooseFromList(fileList, {withPrompt: "Which Positions?", defaultItems: fileList[0], cancelButtonName: 'Save/Cancel'});
	
}
if (!whichFile) {
	//hit save/cancel
	saveWindowPositions();
} else {
	loadWindowPositions(whichFile[0]);
}
function saveWindowPositions() {
	//prompt name
	try { 
		var prompt = app.displayDialog('Save positions under what name?', {defaultAnswer: "My Window Positions"});
	} catch (e) {
		//do nothing if cancelled
		return;
	}
	positionsName = prompt.textReturned;
	
	var savedPositions = [];
	
	//loop through all applications
	var appList = Application("System Events").applicationProcesses.whose({visible: true}).name();
	
	for (appNum in appList) {
		var appName = appList[appNum];
		
		//loop thru all windows for apps
		var windowList = Application(appName).windows;
		
		for (windowNum in  windowList) {
			var whichWindow = windowList[windowNum];
			
			//put app name, window num, and loc in list
			savedPositions.push({app: appName, window: windowNum, bounds: whichWindow.bounds()});
		}
	}
	
	// open new file
	var file = app.openForAccess(filePath + positionsName, { writePermission: true });
	app.setEof(file, { to: 0 });
	
	//write data to file
	app.write(JSON.stringify(savedPositions), {to: file});
	app.closeAccess(file);
}

function loadWindowPositions(filename) {
	//get saved pos 
	var fileText = app.read(Path(filePath + filename));
	var savedPositions = JSON.parse(fileText);
	
	//loop thru windows
	for (windowNum in savedPositions) {
		var windowData = savedPositions[windowNum];
		
		//if window, set pos
		if (windowData.window &lt; Application(windowData.app).windows.length) {
			Application(windowData.app).windows[windowData.window].bounds = windowData.bounds;
		}
	}
}</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunJavaScript</string>
				<key>CFBundleVersion</key>
				<string>1.0</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunJavaScriptAction</string>
				<key>IgnoresInput</key>
				<true/>
				<key>InputUUID</key>
				<string>9DDEBBDD-20E6-40F3-BD84-F314DF47F49C</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
					<string>JavaScript</string>
				</array>
				<key>OutputUUID</key>
				<string>A0729299-87B4-4254-8B02-4CD3075A24BF</string>
				<key>UUID</key>
				<string>3BABE55C-0235-4081-87C7-8AEE4D0BA551</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>function run(input, parameters) {
	
	// Your script goes here

	return input;
}</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>753.000000:424.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run JavaScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSActionTemplate</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
